//lab_1.h
#include <iostream>
#include <array>
using namespace std;
class lab_1 {
private:
  int first;
  int second;
public:
  lab_1(){                                          //Constructor
      first= 0;
      second = 0;
  }
  void setValue(){
      cout << "first: ";
      cin >> first;
      cout << "second: ";
      cin >> second;
  }
  void getValue(){
      if (second<-1) cout << first<< "+" << -second << "i" << endl;
      else if (second==-1) cout << first << "+i" << endl;
      else if (second==0) cout << first << endl;
      else if (second==1) cout << first << "-i" << endl;
      else cout << first << "-" << second << "i" << endl;
  }
  void sqr(){
    int first_temp=first;
    first=first*first-(second*second);
    second=first_temp*second+first_temp*second;
  }
  //--operators' overload--
  lab_1 operator= (lab_1 temp) {
      first = temp.first;
      second = temp.second;
      return temp;
  }
  lab_1 operator* (lab_1 obj){
    lab_1 temp;
    temp.first=obj.first*first-(obj.second*second);
    temp.second=obj.first*second+first*obj.second;
    return temp;
  }
  lab_1 operator- (){
    lab_1 temp;
    temp.first=-first;
    temp.second=-second;
    return temp;
  }
};

//main.cpp
#include "lab_1.h"
int main(){
  lab_1 obj1;
  lab_1 obj2;
  lab_1 obj3;
  lab_1 obj4;
  //--Basic io example--
  cout<<"Testing obj1: "<<endl;
  obj1.setValue();
  obj1.getValue();
  //--sqr method example--
  cout<<"Testing obj2: "<<endl;
  obj2.setValue();
  cout<<"Before:"<<endl;
  obj2.getValue();
  obj2.sqr();
  cout<<"After:"<<endl;
  obj2.getValue();
  //--Array--
  cout<<"lab_1 array: "<<endl;
  array <lab_1, 2> objArray;
  for(int i=0;i<2;i++){
      objArray[i].setValue();
      objArray[i].getValue();
  }
<<<<<<< HEAD
  //--Composition|Assignment|Negative Value--
=======
  //--Composition|Assignment|Negative Value--
>>>>>>> da7f04177b9b647ed226dbd8e3599dc17a8a58e9
  cout<<"Array composition as obj3: "<<endl;
  obj3=objArray[0]*objArray[1];
  obj3.getValue();
  cout<<"obj4 as obj3 negative: "<<endl;
  obj4=-obj3;
  obj4.getValue();
  return 0;
}
